---
title: ""
execute: 
  echo: false
---

```{r}
#| message: false
#| label: setup
#| echo: false

library(tidyverse)
```

```{r}
#| label: diamonds-plot
#| message: false
#| echo: false


diamonds |> 
  filter(z != 0) |> 
  filter(color == "D") |> 
  ggplot(aes(x = carat, y = price, color = cut)) + 
    geom_point() +
    scale_y_continuous(labels = scales::dollar) +
    labs(title = "Prices and Sizes for Diamonds of Color D",
         subtitle = "'Round' carat values like 1, 1.5 and 2 are more common.",
         x = "Carat",
         y = "Price")
```

```{r}
# Prepare data: group mean city mileage by manufacturer.
cty_mpg <- aggregate(mpg$cty, by=list(mpg$manufacturer), FUN=mean)  # aggregate
colnames(cty_mpg) <- c("make", "mileage")  # change column names
cty_mpg <- cty_mpg[order(cty_mpg$mileage), ]  # sort
cty_mpg$make <- factor(cty_mpg$make, levels = cty_mpg$make)  # to retain the order in plot.
head(cty_mpg, 4)
#>          make  mileage
#> 9     lincoln 11.33333
#> 8  land rover 11.50000
#> 3       dodge 13.13514
#> 10    mercury 13.25000

library(scales)
library(ggplot2)
theme_set(theme_bw())

# Draw plot
ggplot(cty_mpg, aes(x=make, y=mileage)) + 
  geom_bar(stat="identity", width=.5, fill="tomato3") + 
  labs(title="Ordered Bar Chart", 
       subtitle="Make Vs Avg. Mileage", 
       caption="source: mpg") + 
  theme(axis.text.x = element_text(angle=65, vjust=0.6))

# Example data
df <- data.frame(
  x = 1:20,
  y = rnorm(20, mean = 15, sd = 5)
)

# Define a function to assign colors based on value ranges
assign_color <- function(value) {
  if (value >= 0 & value <= 10) {
    return("green")
  } else if (value > 10 & value <= 25) {
    return("red")
  } else {
    return("black")  # Fallback color for values outside the specified range
  }
}

# Apply the color function to the dataset
df$color <- sapply(df$y, assign_color)

# Plot using ggplot
ggplot(df, aes(x = x, y = y, color = color)) +
  geom_point(size = 3) +
  scale_color_identity(guide = "none") +  # To prevent adding a legend for colors
  labs(
    title = "Color-coded Scatter Plot",
    x = "X-axis",
    y = "Y-axis"
  )


```

This is a Quarto website.

To learn more about Quarto websites visit <https://quarto.org/docs/websites>.

The relation between humidity and temperature is inversely proportional. If temperature increases, it will reduce relative humidity; thus, the air will become drier. When the temperature decreases, the air will become wetter; therefore, the relative humidity will increase.
